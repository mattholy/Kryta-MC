import type { TmNode, CascaderOption } from './interface';
import type { SelectBaseOption } from '../../select/src/interface';
declare function traverseWithCallback<T extends {
    children?: T[];
}>(options: T[], beforeCallback: (node: T) => void, afterCallback: (node: T) => void): void;
declare function createSelectOptions(tmNodes: TmNode[], checkStrategyIsChild: boolean): Array<SelectBaseOption & {
    path: CascaderOption[];
}>;
declare function getPathLabel(node: TmNode | null, separator: string, labelField: string): string;
export { traverseWithCallback, createSelectOptions, getPathLabel };
