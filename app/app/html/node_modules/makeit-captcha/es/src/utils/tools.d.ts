declare class MiTools {
    /**
     * Whether it is a mobile phone.
     * @returns {boolean}
     */
    isMobile(): boolean;
    /**
     * Whether it is a number.
     * @param number
     */
    isNumber(number: any): boolean;
    /**
     * Unit conversion.
     * @param value
     */
    pxToRem(value: number): number;
    /**
     * Generate a random number within the specified range.
     * @param start
     * @param end
     * @returns {number}
     */
    randomNumberInRange(start: number, end: number): number;
    /**
     * Event binding.
     * @param element
     * @param event
     * @param listener
     * @param useCapture
     */
    on(element: Window | HTMLElement, event: keyof HTMLElementEventMap, listener: (this: HTMLDivElement, evt: HTMLElementEventMap[keyof HTMLElementEventMap]) => any, useCapture?: boolean): void;
    /**
     * Event unbind.
     * @param element
     * @param event
     * @param listener
     * @param useCapture
     */
    off(element: Window | HTMLElement, event: keyof HTMLElementEventMap, listener: (this: HTMLDivElement, evt: HTMLElementEventMap[keyof HTMLElementEventMap]) => any, useCapture?: boolean): void;
    /**
     * convert color.
     * @param color
     * @param opacity
     */
    colorHexToRgba(color: string, opacity?: number): string;
    /**
     * convert color.
     * @param color
     */
    colorRgbToHex(color: string): string;
}
declare const _default: MiTools;
export default _default;
